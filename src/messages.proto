

package ham;

message Wrapper {
    enum Type { 
            CONNECT_REQUEST = 10;
            CONNECT_REPLY   = 11;
            ENV_RENAME_REQUEST  = 20;
            ENV_RENAME_REPLY    = 21;
            ENV_GET_PARAMETERS_REQUEST = 30;
            ENV_GET_PARAMETERS_REPLY = 31;
            ENV_GET_DATABASE_NAMES_REQUEST = 40;
            ENV_GET_DATABASE_NAMES_REPLY = 41;
            ENV_FLUSH_REQUEST = 50;
            ENV_FLUSH_REPLY = 51;
            ENV_CREATE_DB_REQUEST = 60;
            ENV_CREATE_DB_REPLY = 61;
            ENV_OPEN_DB_REQUEST = 70;
            ENV_OPEN_DB_REPLY = 71;
    }

    required Type type = 1;

    optional ConnectRequest connect_request = 10;
    optional ConnectReply connect_reply     = 11;
    optional EnvRenameRequest env_rename_request   = 20;
    optional EnvRenameReply env_rename_reply       = 21;
    optional EnvGetParametersRequest env_get_parameters_request = 31;
    optional EnvGetParametersReply env_get_parameters_reply = 32;
    optional EnvGetDatabaseNamesRequest env_get_database_names_request = 41;
    optional EnvGetDatabaseNamesReply env_get_database_names_reply = 42;
    optional EnvFlushRequest env_flush_request = 51;
    optional EnvFlushReply env_flush_reply = 52;
    optional EnvCreateDbRequest env_create_db_request = 61;
    optional EnvCreateDbReply env_create_db_reply = 62;
    optional EnvOpenDbRequest env_open_db_request = 71;
    optional EnvOpenDbReply env_open_db_reply = 72;
}

message ConnectRequest {
    required string path = 1;
}

message ConnectReply {
    required sint32 status = 1;
}

message EnvGetParametersRequest {
    repeated uint32 names = 1;
}

message EnvGetParametersReply {
    required sint32 status = 1;
    optional uint32 cachesize = 2;
    optional uint32 pagesize = 3;
    optional uint32 max_env_databases = 4;
    optional uint32 flags = 5;
    optional uint32 filemode = 6;
    optional string filename = 7;
};

message EnvGetDatabaseNamesRequest {
}

message EnvGetDatabaseNamesReply {
    required sint32 status = 1;
    repeated uint32 names = 2;
}

message EnvRenameRequest {
    required uint32 oldname = 1;
    required uint32 newname = 2;
    required uint32 flags = 3;
}

message EnvRenameReply {
    required sint32 status = 1;
};

message EnvFlushRequest {
    required uint32 flags = 1;
}

message EnvFlushReply {
    required sint32 status = 1;
};

message EnvCreateDbRequest {
    required uint32 dbname = 1;
    required uint32 flags = 2;
    repeated uint32 param_names = 3;
    repeated uint64 param_values = 4;
}

message EnvCreateDbReply {
    required sint32 status = 1;
    required uint32 db_handle = 2;
};

message EnvOpenDbRequest {
    required uint32 dbname = 1;
    required uint32 flags = 2;
    repeated uint32 param_names = 3;
    repeated uint64 param_values = 4;
}

message EnvOpenDbReply {
    required sint32 status = 1;
    required uint32 db_handle = 2;
};

