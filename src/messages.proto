

package ham;

message Wrapper {
    enum Type { 
            CONNECT_REQUEST = 10;
            CONNECT_REPLY   = 11;
            RENAME_REQUEST  = 20;
            RENAME_REPLY    = 21;
            ENV_GET_PARAMETERS_REQUEST = 30;
            ENV_GET_PARAMETERS_REPLY = 31;
            ENV_GET_DATABASE_NAMES_REQUEST = 40;
            ENV_GET_DATABASE_NAMES_REPLY = 41;
    }

    required Type type = 1;

    optional ConnectRequest connect_request = 10;
    optional ConnectReply connect_reply     = 11;
    optional RenameRequest rename_request   = 20;
    optional RenameReply rename_reply       = 21;
    optional EnvGetParametersRequest env_get_parameters_request = 31;
    optional EnvGetParametersReply env_get_parameters_reply = 32;
    optional EnvGetDatabaseNamesRequest env_get_database_names_request = 41;
    optional EnvGetDatabaseNamesReply env_get_database_names_reply = 42;
}

message ConnectRequest {
    required uint64 id = 1;
    required string path = 2;
}

message ConnectReply {
    required uint64 id = 1;
    required sint32 status = 2;
}

message EnvGetParametersRequest {
    required uint64 id = 1;
    repeated uint32 names = 2;
}

message EnvGetParametersReply {
    required uint64 id = 1;
    required sint32 status = 2;
    optional uint32 cachesize = 3;
    optional uint32 pagesize = 4;
    optional uint32 max_env_databases = 5;
    optional uint32 flags = 6;
    optional uint32 filemode = 7;
    optional string filename = 8;
};

message EnvGetDatabaseNamesRequest {
    required uint64 id = 1;
}

message EnvGetDatabaseNamesReply {
    required uint64 id = 1;
    required sint32 status = 2;
    repeated uint32 names = 3;
}

message RenameRequest {
    required uint64 id = 1;
    required uint32 oldname = 2;
    required uint32 newname = 3;
    required uint32 flags = 4;
}

message RenameReply {
    required uint64 id = 1;
    required sint32 status = 2;
};

