
x release 0.4.5

x support GPL3
    x change all source headers -> GPL 2.0 *or later*
    x rename COPYING to COPYING.GPL2
    x add GPL3 license file (COPYING.GPL3)

x create a new repository for hamsterdb-meta

o create a new repository for hamsterdb-alien for all dependencies 
    in source and precompiled (static/non-debug - cppunit and berkeleydb)
    x linux64-le
    x linux32-le
    o cygwin32
    o win32
    o win64
    o wince-x86
    o ppc32-be

x unittests - check for leaks!
    x replace big record with tiny
    x replace big record with null
    x replace tiny record with null
    x replace tiny record with big

o support for duplicate keys
    x make sure that EXTENDED_BLOB flag is always set if blob>=8 byte 
        (check unittests!)
        -> not needed - TINY_BLOB or SMALL_BLOB are enough
    x test if everything runs fine if blobs are always allocated
    x enhance the blob structure for double-linked lists
        x unittest (structure)
    x enhance the cursor structure for the linked list
        x coupled cursor: store blobid of the current duplicate

    x ham_insert: insert duplicate (at the beginning of the list)
        x if blob is SMALL/TINY: create blob structure
        x prepend the new blob, if HAM_DUPLICATE==1
        x unittests; check dupe with ham_find

    x ham_erase: erases the first element of a list
        x unittest

    x modify db_free_page; also delete the duplicates
    x modify my_free_cb

    x ham_create needs flag HAM_ENABLE_DUPLICATES
        x persistent flag -> unittest

    x don't allow insert(HAM_DUPLICATE|HAM_OVERWRITE)
        x fix in code
        x documentation!
        x unittest

    o modify cursor->next, cursor->previous to walk over the linked list 
        x flags: HAM_SKIP_DUPLICATES -> don't walk over duplicates
        x !!! currently, only the blob->next pointer is set, not blob->prev
            x need to modify ham_insert
            x need to modify ham_erase
            x unittests!
                x insert dupes, look up, erase them, look up
                x also for in-memory databases!

        x when moving the cursor, always check if the cursor has duplicates
            -> already started in my_move_next(), my_move_prev()
            x implement blob_get_previous_duplicate()
            x implement blob_get_next_duplicate()
                x unittests!

            x ignore dupes if !(db_flags&ENABLE_DUPLICATES) 
                or (flags&SKIP_DUPLICATES)
            x otherwise: always store the current blobid
            x when fetching the record: if (blobid) load blobid; otherwise
                continue as usual

            x unittests w/  SKIP_DUPLICATES
            x unittests w/o SKIP_DUPLICATES

        o couple cursor (bt_cursor_couple):
            o always walk through the linked list, never load 
                the blobid directly
            o ham_insert: don't uncouple cursors if inserting duplicates
            o unittests w/ coupling, uncoupling

    o unittests: insert NULL/TINY/SMALL blobs, then create linked lists
    o unittests: insert NULL/TINY/SMALL as duplicates

    o modify cursor->insert - if the cursor is in a linked list, 
        insert a duplicate at the requested position
        o HAM_DUPLICATE_INSERT_AFTER (=HAM_DUPLICATE)
        o HAM_DUPELICATE_INSERT_BEFORE
        o HAM_DUPELICATE_INSERT_FIRST (default)
        o HAM_DUPELICATE_INSERT_LAST
    o ham_cursor_erase: erase the duplicate at the current position
        o unittest

    o replace duplicates
        !! the blob-id can change when replacing a blob - all cursors
        have to be updated; this imples that we need...
        o access to ALL uncoupled cursors of a database
        o modify cursor->replace - if the cursor is in a linked list, 
            replace a duplicate at the requested position
        o modify ham_replace - if the blob is in a linked list, 
            replace the head

    . ham_erase:
        o un-merge a single, remaining blob: if it's <=8 byte, create a 
            record structure
        o unittest

    . be more careful when uncoupling cursors - especially when inserting 
        or deleting items, uncoupling is often not necessary

    o modify acceptance test for --duplicate=1 (berkdb and hamster)
    o update documentation
    o update tutorial
    o new sample, read all words from stdin, insert them with line information;
        also, insert the same word in a second db, with a word-counter
        then dump all words with the line information, and how often they
        were used
    . modify sample env1, to create a 1:n relationship between orders
        and customers

o webpage
    o update web page about license change (GPL2 or GPL3)
    o rename "Features" to "About"
    . move to cakephp framework
    . frontpage: resize hamster picture; remove text -> more space below
        (for 3 colums: news, main features, articles/testimonials/link cloud)

o btree_insert:421 - warum wird der extkey gelÃ¶scht??

o protect users against uninitialized ham_key_t and ham_record_t structures
    o check if key->flags is 0 or USER_ALLOC
    o check if key->_rid is 0
    o check if record->flags is 0 or USER_ALLOC
    o check all other private flags
    o unittests!

