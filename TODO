
Legend:

o a pending  TODO item (normal priority)
. a pending  TODO item (low priority)
x a finished TODO item

-----------------------------------------------------------------------------

o new web page
    x link-cloud: add link to forum
    o update samples for C/C++
    o add documentation for Java
    o add documentation for .NET (chm file)
    o add samples for Java
    o add samples for .NET
    o add samples for Python
    o add RSS/Atom feed
    o add google sitemap

x add commercial license to source repositories (all of them!), update README
    and all header file comments

o tools/tests/test.sh: add to release-process
    - tricky: currently fails because of invalid database versions, and
        because on cygwin the pagesize is different

o win32: test if prebuilt visual studio-library works in express edition, if 
    it was built with the professional edition (and vice versa)
    -> maybe have to change the build process, if it doesn't work

o win64: need cppunit for hamsterdb-alien

o update Python-Wrapper for logging/recovery
    o add COPYING.COM

o update .NET-Wrapper for logging/recovery
    o add COPYING.COM

o update Java-Wrapper for logging/recovery
    o add COPYING.COM

. release-process: enhance automated tests of win32/win64 dll and lib

-----------------------------------------------------------------------------

. Perl wrapper

. PHP wrapper

. new configure switch --force-lsb-compliancy (ohne pread, pwrite)
    o needs support for automated testing!

. scenario: created with log, a few inserts; crash (dbfile is ok,
    but logfile is not empty)
    then opened *without* log, another few inserts, closed
    then opened *with* log, log is not empty -> recovery but logfile
    state is no longer valid! must we store the lsn in the database
    header? or is this a case of PEBCAC?

. new API function ham_set_checkpoint(), or extend ham_flush()
    with new flag HAM_SET_CHECKPOINT??

-----------------------------------------------------------------------------

. tests are failing because of a berkeleydb bug:
    --duplicate=1 --use-cursors=1
      o ../../testfiles/1/100.tst - status mismatch
      o ../../testfiles/1/202.tst - status mismatch
      o ../../testfiles/1/220.tst - status mismatch

