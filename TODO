
Legend:

o a pending  TODO item (normal priority)
. a pending  TODO item (low priority)
x a finished TODO item

-----------------------------------------------------------------------------

o wait for bugs...

o remove win32 compiler warnings (related to __FUNCTION__)

o define a new release process for stable/unstable releases

o release 1.0.0!

x need new internal hamster function: add_context_data, get_context_data
    x unittests

o java wrapper
    x package name is de.crupp.hamsterdb (??)
    x create directory structure - bindings/java/..., src/java
    x add autoconf stuff 
        x search jni.h
        x --enable-java
        x --with-jdk=...
    x implementation (synchronized!)
        x key
        x record
        x error
        x database
        x cursor
        x environment
    o wie steht's mit synchronization, wenn gleichzeitig ham_insert und
        ham_cursor_insert aufgerufen werden? denn dann muss ja sowohl die
        cursor-klasse als auch die database-klasse gelockt werden
    o die cursor-classe ist synchronized, database auch; aber wenn 
        ham_insert und ham_cursor_insert gleichzeitig aufgerufen werden,
        ist das database handle nicht gelockt. der cursor müsste dann auch
        seine parent-datenbank locken. wie mach ich das?
    o wohin kommen die verbleibenden konstanten? (z.b. flags für insert etc)
    o braucht die Key/Record-klasse wirklich getter und setter?
        oder sollen sie ganz raus, und ich nehme nur byte[]-arrays?
    o ham_cursor_move hat zwei parameter, die gefüllt werden - wie mach ich
        das?
    o sicherstellen dass key.data und record.data nie null sind
    o unittests - wohin? projektstruktur?
    o add header comments/copyright
    o test with valgrind
    o add 2 samples
    o improve documentation
    o create jar
    o add autoconf build automization
    o add win32 build automization

    o add testing scheme to release process
        o win32
        o win64
        o linux 32bit
        o linux 64bit

. tests are failing because of a berkeleydb bug:
    --duplicate=1 --use-cursors=1
      o ../../testfiles/1/100.tst - status mismatch
      o ../../testfiles/1/202.tst - status mismatch
      o ../../testfiles/1/220.tst - status mismatch

