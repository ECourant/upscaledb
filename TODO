
x make sure that --mmap=0 really disables mmap (getopt-problem?)
    -> README/BUGFIX

x new flag HAM_LOCK_EXCLUSIVE
    x implementation
        x for linux/posix
        x for win32
    x documentation
    x test
        x linux
        x windows
    -> README/NEW FEATURE

x allow x64-bit builds with MSVC/Visual Studio Solution file
    -> README/NEW FEATURE

x move blobid handling of extended keys to its own function

x extkey-refactoring
    x free all extkeys! (search for blob_frees)
        -> debug && inmemorydb: assert that the extkey-cache is empty
           AFTER the extkeys were freed
    x extkeys need an "age"; use (npers) txn_id as an age
    x when purging the cache, also purge the extkeys (but not too often - 
        only when the cache is too full and txn_id%10==0)
        x extkeys, which are older than 5 txn's, are marked for removal
    -> README/PERFORMANCE IMPROVEMENT

x do some profiling - make sure that the extkey-cache is not a bottleneck
    -> no, we're really great

x remove TODOs (grep for @@@), if tests run on PowerPC

x ham_strerror prüfen - vollständig?

x write more unittests
    x keys.c/keys.h
    x extkeys.c/extkeys.h (also test the caching behaviour!)
    x blob.c/blob.h
    x trying to open/create databases with invalid page sizes, key sizes,
        invalid flag combinations etc
    x negative tests for all public functions!
    -> README

x port to Windows CE
    -> README/NEW FEATURE

x remove HAM_RELEASE (not needed, same as !HAM_DEBUG)

x freelist-unittest: check if freelist pages are marked as dirty

x bugfix: freelist-pages were not marked 'dirty' and therefore not
    written to disk 
    -> README/BUGFIX

x make sure that the process memory consumption doesn't grow
    (endless loop with extended keys!) -> grows!!!!!
    x make sure that extkey_cache is empty when closing the database
        (especially for in-memory databases)
    x extkey_cache must not leak
    x all pages allocated by the freelist are never flushed and therefore
        the freelist's memory consumption grows and grows...
    -> README/BUGFIX
    x HAM_DISABLE_FREELIST_FLUSH is currently ignored
    -> README/BUGFIX

x multiple files per database
    -> README/NEW FEATURE
    x define the ham_parameter_t lists
    -> README/API CHANGE
    x rewrite ham_open_ex and ham_create_ex
    x change the unit test
    x change the acceptance test

    x write the ham_env_t structure (with the linked db-list), ham_env_new 
        and ham_env_delete
    x write a unittest

    x change the database header format
    x make sure that the acceptance tests still work

    x DbTest::structureTest: try again, but this time with 
        a real Environment!

    x change the backend structure in the indexdata - first two bytes
        are always the database name! (u16_t)

    x refactor allocator, move to environment
    x decouple device from db

    x implement ham_env_create
        x create allocator
        x create device/file
        x store flags, parameter list

    x implement ham_env_close
        x make sure that all db's are closed

    x implement ham_env_open
        x store flags, parameter list
        x create allocator
        x open device/file

    x write a unittest for ham_env_create
    x write a unittest for ham_env_close
    x write a unittest for ham_env_open

    x implement ham_env_create_db(name, flags, param_list *)
        x move dbheader->_indexdata_offset to non-persistent db-storage!
        x valid flags: HAM_USE_BTREE, HAM_DISABLE_VAR_KEYLEN
        x must also use stored flags, parameter list from env
        x add database to env->list
        x must not create device, allocator
        x must create all other shared members if they are NULL
        x set dbheader->_max_db to DB_MAX_INDICES
        x set db->_indexdata_offset

    x db_set_keysize: must move to the backend
    x db_set_pers_flags: must move to the backend

    x implement ham_env_open_db(name, flags, param_list *)
        x valid flags: none???
        x make sure that the database was not yet opened
        x must also use stored flags, parameter list from env
        x must not create device, allocator
        x must create all other shared members if they are NULL
        x add database to env->list
        x set db->_indexdata_offset

    x unittests are not running
    x acceptance-tests are not running

    x modify ham_close - must free all ressources if it's the last
        database in the environment
        x remove database from env->list

    x ham_close: all pages must get a new owner, if their owner is closed

    x write a unittest (create several databases; close, reopen, close, etc)
        x also for in-memory-db!

    x modify all(!) public functions: prepare the shared members for 
        operations of THIS database:
        if (db_get_env(db)) {
          cache_set_db(cache, db);
          extkey_cache_set_db(extkey_cache, db);
          ...
        }

    x write unittests for the new functionalities
        x with extended keys (and reopen, unless in-memory)
        x with extended keys and erase/freelist (and reopen, unless in-memory)
        x with cursors (and reopen, unless in-memory)
        x with extended keys and erase/freelist and "random" create/close (and
            reopen, unless in-memory)
        x all of the above, with in-memory db

    x implement ham_env_rename_db
        x check if new name is invalid
        x check if new name already exists -> HAM_DATABASE_ALREADY_EXISTS
        x check if old name exists -> HAM_DATABASE_NOT_FOUND
        x do the replacement
    x write unittests
        x env with opened databases
        x env without opened databases

    x db_free_page doesn't move the page to the freelist!!
        -> README/BUGFIX 

    x implement ham_env_erase_db
        x make sure that the database is not open
        x inmemory: function is not available (should be automatically
            the case, because the database does not exist, if it's not
            open)
        x move all pages (and blobs, and extkeys) to the freelist
    x write unittests

    x cleanups:
        x ham_env_open_db: make sure that a database is opened only once!
        x ham_env_create_ex accepts the keysize, but it's a "per database"
            parameter
        x ham_env_create_db must accept keysize (and actually use it!)
        x ham_open kann laut doku DISABLE_VARLEN_KEYS - fehlt in 
            ham_env_open_db!
        x fix TODOs

    x write a new sample (structure with primary and secondary index)
    -> README

    x update the tutorial
    -> README

    x endian-tests!
        -> as part of the unittest - create database, check in to svn, 
            open, read/write, close etc (use the database from the 
            env1-sample)
        x write the test
        x add database for little endian
        x add database for big endian

x header file change: internal key size is u16, external key size is size_t
    -> README

x unittest crashes in cygwin

x update the tutorial - ham_create_ex and ham_open_ex have new interface!
    -> also update tutorial version

x unittest crashes in win32 (InMemoryEnvTest::cursorTests)

o port the new sample to CE

o release 0.4.4!

o update samples and tutorial on hamsterdb.com

------------------------------------------------------------------------------

o more tests and performance checks with very large files - around 10 GB

? freelist: keep lookaside-list of freelist pages (which freelist
    page starts at address xxxx?) to speed up the whole process

o new unittest: insert extended keys with 0xffff byte size, search for it

o new unittest: create an environment, don't insert a database; close, reopen
    o then open the environment as a database file (ham_open)
        - should fail with HAM_DATABASE_NOT_FOUND (document this!)

o new unittest: create an environment, insert two databases, delete the first
    o then open the environment as a database file (ham_open)
        - should load the first available database

o acceptance-tests! create an environment with 5 databases, 
    all databases do the same operations


