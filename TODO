
x release 0.4.5

x support GPL3
    x change all source headers -> GPL 2.0 *or later*
    x rename COPYING to COPYING.GPL2
    x add GPL3 license file (COPYING.GPL3)

o create a new repository for hamsterdb-meta

o make an entry in Heise Software directory

o create a new repository for hamsterdb-alien for all dependencies 
    in source and precompiled (cppunit and berkeleydb)
    o cygwin32
    o win32
    o win64
    o wince-x86
    o linux32-le
    o linux64-le
    o ppc32-be

o support for duplicate keys
    o problem: when a blob is deleted, the blobid might be reused
        -> a cursor pointing to this blob can't find out if it was replaced
        -> need a second unique identifier

    o make sure that EXTENDED_BLOB flag is always set if blob>=8 byte 
        (check unittests!)
    o when replacing a big blob with a blob <= 8 byte: delete the
        blob, then move it into the key
        o unittest
    o un-merge a blob: if it's <=8 byte, create a record structure
        o unittest
    o enhance the blob structure for double-linked lists, but only if 
        the database was opened/created with HAM_ENABLE_DUPLICATES (??)
        o unittest
    o enhance the cursor structure for the linked list
        o coupled cursor: store blobid of the current duplicate (and uid)
        o unittest
    o ham_insert: insert duplicate (at the beginning of the list)
        o if blob is SMALL/TINY: create blob structure
        o unittests; check dupe with cursor
    o ham_erase: erases the first element of a list
        o if blob is SMALL/TINY: remove blob structure
        o unittest
    o modify cursor->next, cursor->previous to walk over the linked list 
        o unittest (w/ ham_insert)
        o uncoupled cursor: first, try to load the blobid with the cached
            blobid, then check the "age"; if this doesn't work, 
            retur HAM_KEY_NOT_FOUND (same as if an item is deleted, but a
            cursor still points to the item)
            o unittest
    o modify cursor->insert - if the cursor is in a linked list, 
        insert a duplicate at the requested position
    o ham_cursor_erase: erase the duplicate at the requested position
        o unittest

    o modify acceptance test for --duplicate=1 (berkdb and hamster)
    o update documentation
    o update tutorial
    o new sample, read all words from stdin, insert them with line information;
        also, insert the same word in a second db, with a word-counter
        then dump all words with the line information, and how often they
        were used

o webpage
    o update web page about license change (GPL2 or GPL3)
    o rename "Features" to "About"
    . move to cakephp framework
    . frontpage: resize hamster picture; remove text -> more space below
        (for 3 colums: news, main features, articles/testimonials/link cloud)

