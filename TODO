 
Legend:

o a pending  TODO item (normal priority)
. a pending  TODO item (low priority)
x a finished TODO item

-----------------------------------------------------------------------------

x Ger: merge 1000 other changes
    x new public function to get the Environment of a Database
        ham_env_t *ham_get_env(ham_db_t *)
    x ham_log_append_overwrite: unused?
    x ham_log_prepare_overwrite: unused?
    x unittest for env_set_active - it's set in 3 places!
    x hamsterdb.c: check every backend function against NULL - return
        NOT_IMPLEMENTED if it's NULL
    x rename db_header_t to env_header_t
    x LogTests have lots of failures when calling flock() -- ok
    x review the page ownership - db_fetch_page() should only get 'db' as
        parameter, not env; instead, add env_fetch_page()
    x review the page ownership - db_alloc_page() should only get 'db' as
        parameter, not env; instead, add env_alloc_page()
    x unittests: db_set_allocator was disabled - fix it!
    x db_prepare_ham_key_for_compare: needed? can be merged with
        compare_pub_to_int?
    x remove all warnings on 32bit linux (copy pointer to ham_u64_t)

x rename windows-DLL/LIB to hamsterdb-1.1.2 (include version in filename!)
    x only win32, not wince (dll.vcproj, lib.vcproj seems to be enough)
    x document this in release-process.txt (create a sed command)

x hamsterdb-tests: also test with pagesize of 128kb

x reevaluate default cache size - should we just grab 1 or 2 MB?
    x 1 MB should be ok - do some benchmarks
    x setting strict cache size - is this tested? -- no!
    x setting cache size - is this tested? -- no!
    x are extkeys and other mallocs also part of it? - no... but i think
        that's ok

x still some problems with strict aliasing:
    db.cpp:98: warning: dereferencing type-punned pointer will break
        strict-aliasing rules
    now gcc uses -O2 - but -O3 would be better. check what's wrong...
    x ask on mailing list -> -fno-tree-vectorize works
    x test on ubuntu 8
    x test with non-gcc compiler (faked)

x Bugfix - ham_get_parameter failed if database was opened read-only
    (thanks, Austin)

x rewrite ham_get_parameter and ham_env_get_parameter
    x implement
    x unittest for ham_get_parameter(NULL, ...)
    x unittest for ham_get_parameter(db, ...) // initialized
    x unittest for ham_get_parameter(db, ...) // initialized, RO
    x unittest for ham_env_get_parameter(NULL, ...)
    x unittest for ham_env_get_parameter(env, ...) // initialized
    x unittest for ham_env_get_parameter(env, ...) // initialized, RO

x create unittests for ALL cachesize getters/setters and check
    env_get_cachesize AND ham_get_parameter AND ham_env_get_parameter!
    x ham_env_create_ex
    x ham_create_ex
    x ham_env_open_ex
    x ham_open_ex

o hamsterdb-tests: valgrind ./test ../../testfiles/1/220.tst --pagesize=1024
--overwrite=1 --reopen=1
    -->==4434== Invalid read of size 1
==4434==    at 0x41FF64: __freel_alloc_area32 (freelist.c:2576)
==4434==    by 0x421072: freel_alloc_area_ex (freelist.c:4807)
==4434==    by 0x416918: blob_allocate (blob.c:414)
==4434==    by 0x416D8F: blob_overwrite (blob.c:721)
==4434==    by 0x410D6A: key_set_record (keys.c:158)
==4434==    by 0x41B60E: my_insert_nosplit (btree_insert.c:748)
==4434==    by 0x41BD92: my_insert_in_page (btree_insert.c:604)
==4434==    by 0x41C03C: T.76 (btree_insert.c:503)
==4434==    by 0x41BFE3: T.76 (btree_insert.c:517)
==4434==    by 0x41C112: my_insert_cursor (btree_insert.c:351)
==4434==    by 0x41C487: btree_insert_cursor (btree_insert.c:458)
==4434==    by 0x40A02D: ham_insert (hamsterdb.c:3909)
==4434==  Address 0x632b5a1 is 1 bytes after a block of size 1,024 alloc'd
==4434==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4434==    by 0x413B3C: __f_read_page (device.c:171)
==4434==    by 0x41D0C4: db_fetch_page (db.c:979)
==4434==    by 0x41F292: __freel_mark_free32 (freelist.c:4359)
==4434==    by 0x416D05: blob_overwrite (blob.c:703)
==4434==    by 0x410D6A: key_set_record (keys.c:158)
==4434==    by 0x41B60E: my_insert_nosplit (btree_insert.c:748)
==4434==    by 0x41BD92: my_insert_in_page (btree_insert.c:604)
==4434==    by 0x41C03C: T.76 (btree_insert.c:503)
==4434==    by 0x41BFE3: T.76 (btree_insert.c:517)
==4434==    by 0x41C112: my_insert_cursor (btree_insert.c:351)
==4434==    by 0x41C487: btree_insert_cursor (btree_insert.c:458)
==4434== 
==4434== Invalid read of size 1
==4434==    at 0x41FF64: __freel_alloc_area32 (freelist.c:2576)
==4434==    by 0x421072: freel_alloc_area_ex (freelist.c:4807)
==4434==    by 0x416918: blob_allocate (blob.c:414)
==4434==    by 0x410BB0: key_set_record (keys.c:126)
==4434==    by 0x41B60E: my_insert_nosplit (btree_insert.c:748)
==4434==    by 0x41BD92: my_insert_in_page (btree_insert.c:604)
==4434==    by 0x41C03C: T.76 (btree_insert.c:503)
==4434==    by 0x41BFE3: T.76 (btree_insert.c:517)
==4434==    by 0x41C112: my_insert_cursor (btree_insert.c:351)
==4434==    by 0x41C487: btree_insert_cursor (btree_insert.c:458)
==4434==    by 0x40A02D: ham_insert (hamsterdb.c:3909)
==4434==    by 0x4054F2: hamsterdb::insert(ham_key_t*, ham_record_t*) (hamsterdb.cpp:277)
==4434==  Address 0x69cb8b1 is 1 bytes after a block of size 1,024 alloc'd
==4434==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4434==    by 0x413B3C: __f_read_page (device.c:171)
==4434==    by 0x41D0C4: db_fetch_page (db.c:979)
==4434==    by 0x41F292: __freel_mark_free32 (freelist.c:4359)
==4434==    by 0x416DB4: blob_overwrite (blob.c:725)
==4434==    by 0x410D6A: key_set_record (keys.c:158)
==4434==    by 0x41B60E: my_insert_nosplit (btree_insert.c:748)
==4434==    by 0x41BD92: my_insert_in_page (btree_insert.c:604)
==4434==    by 0x41C03C: T.76 (btree_insert.c:503)
==4434==    by 0x41BFE3: T.76 (btree_insert.c:517)
==4434==    by 0x41C112: my_insert_cursor (btree_insert.c:351)
==4434==    by 0x41C487: btree_insert_cursor (btree_insert.c:458)

o support partial reading/writing of records
    details at http://www.oracle.com/technology/documentation/berkeley-db/db/api_reference/C/dbt.html
    o new flag HAM_PARTIAL
    o new fields in ham_record_t
    o increment libtool version!
    o documentation in header file
    o documentation in tutorial (re-enable tutorial as long as we don't
        have a wiki!)
    o disallow if duplicate sorting is enabled
        o for ham_insert
            o unittest
        o for ham_cursor_insert
            o unittest
    o write an initial blob which starts at offset > 0 
        write(offset=100, size=200) (leave empty gap at beginning)
    o write a blob which starts at offset 0
        write(offset=0, size=200) (no gap at beginning)
    o append to a blob 
    o same about reading

o caching
    o why is the max. number of pages limited?
    o can we replace this with a soft limit? or completely remove the limit?
    o what about HAM_CACHE_UNLIMITED - does it cache ALL pages? 
    o is HAM_CACHE_UNLIMITED monster-tested?    

o test freelist behaviour
    - create a new Database => hdr file and root page is allocated
    - are these two pages marked as "allocated" in the freelist?

. update the Java API 

. update the .NET API 

. update the Python API 

. improve documentation/tutorial/faq about
    o confluence is too slow on this server :( Need something else...
    o move some of the documentation and tutorial to a Wiki
        o tutorial (remove from doxygen)
        o samples (remove from doxygen)
        o faq (remove from doxygen)
        o internal developer documentation (remove from doxygen)
    o tutorial/faq: add hinting flags
    o tutorial/faq: add DAMs

. add automatic code coverage using gconv
    http://www.manpagez.com/man/1/gcov/
    http://gcc.gnu.org/onlinedocs/gcc/Gcov.html
    http://aleccolocco.blogspot.com/2009/08/sqlite-lesson-in-low-defect-software.html (section "Test Coverage with GCC")
    o track coverage results, publish online
    o gui tools: http://code.google.com/p/trucov/,
                 http://sourceforge.net/projects/ggcov/files/ 

o remove HAM_DAM_FAST_INSERT -- or get it working!?
    o acceptance tests fail, i.e. ./test --keysize=680 --duplicate=1 
        -dam HAM_DAM_FAST_INSERT ../../testfiles/1/190.tst (and others)
    o re-enable tests in monster.sh

o remove HAM_HINT_UBER_FAST_ACCESS, HAM_HINT_RANDOM_ACCESS, HAM_HINT_SEQUENTIAL

. ham_flush: deprecate, replace w. ham_env_flush? it's already implemented
    o need unittests!

. create abstraction layer for local Environments/Databases and remote
    Environments/Databases
    o move every local function to local.c

. network-server (use apr, protocol buffers)

. network-client (use apr, protocol buffers)

. pure java network client

. webpage changes
    http://www.purenetworks.com/
    http://www.omegathemes.com/tf/smartages/#
    http://eucalyptus.com/
    x the header page image is too large
    o frontpage: have multiple images (scrolling in background) with more
        text info? http://malsup.com/jquery/cycle/basic.html
    o sitemap: pulldown with jquery
    o download: need download gates to track in analytics as goals

. evaluate if we can use bamboo for building and testing on multiple
    platforms
    o http://www.atlassian.com/software/bamboo/features/elastic.jsp#remote
    o install server
    o setup several agents (win32, win64, linux x86, linux x86_64, ...) and
        run either all or only some of the tests, including valgrind!

o need tool to upgrade databases from 1.0.x to 1.1.x!

. ham_get_parameter: could return VERSION of the database

. approx. matching: need a sample

. Ger: can specify an initial file size

. reorg. the HINT flags - they're now in hamsterdb_int.h and still used
    internally -> have them completely replaced by the DAM?
    are they needed? what are the performance advantages?

. HighLevelTxnTest::rollbackHugeBlobTest is inactive because huge blobs are
    directly written to disk instead of going through the cache -> in case of
    a txn_abort, these blobs are not reallocated

. win32: check Ger's solution - he can handle multiple msvc versions

----------

. enhance java/python/.NET for transactions and approx matching
    o update README file(s) with new address
    o python: we now have a ham_get_key_count() function and do not need the
        slow iteration code anymore

. enhance acceptance tests - will need new test scripts
    TXN_BEGIN 1  (1 is the txn id)
    TXN_ABORT 1
    TXN_INSERT 1 ...
    TXN_ERASE 1 ...
    TXN_COMMIT 1

. release-process: enhance automated tests of win32/win64 dll and lib

-----------------------------------------------------------------------------

. Perl wrapper

. PHP wrapper

-----------------------------------------------------------------------------

. tests are failing because of a berkeleydb bug:
    --duplicate=1 --use-cursors=1
      o ../../testfiles/1/100.tst - status mismatch
      o ../../testfiles/1/202.tst - status mismatch
      o ../../testfiles/1/220.tst - status mismatch

