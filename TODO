
x make sure that --mmap=0 really disables mmap (getopt-problem?)

x new flag HAM_LOCK_EXCLUSIVE
    x implementation
        x for linux/posix
        x for win32
    x documentation
    x test
        x linux
        x windows

x allow x64-bit builds with MSVC/Visual Studio Solution file

x move blobid handling of extended keys to its own function

x extkey-refactoring
    x free all extkeys! (search for blob_frees)
        -> debug && inmemorydb: assert that the extkey-cache is empty
           AFTER the extkeys were freed
    x extkeys need an "age"; use (npers) txn_id as an age
    x when purging the cache, also purge the extkeys (but not too often - 
        only when the cache is too full and txn_id%10==0)
        x extkeys, which are older than 5 txn's, are marked for removal

x do some profiling - make sure that the extkey-cache is not a bottleneck
    -> no, we're really great

x remove TODOs (grep for @@@), if tests run on PowerPC

x ham_strerror prüfen - vollständig?

x write more unittests
    x keys.c/keys.h
    x extkeys.c/extkeys.h (also test the caching behaviour!)
    x blob.c/blob.h
    x trying to open/create databases with invalid page sizes, key sizes,
        invalid flag combinations etc
    x negative tests for all public functions!

x port to Windows CE

o unittest crashes in cygwin

o multiple files per database
    x define the ham_parameter_t lists
    x rewrite ham_open_ex and ham_create_ex
    x change the unit test
    x change the acceptance test

    x write the ham_env_t structure (with the linked db-list), ham_env_new 
        and ham_env_delete
    x write a unittest

    x change the database header format
    x make sure that the acceptance tests still work

    x DbTest::structureTest: try again, but this time with 
        a real Environment!

    x change the backend structure in the indexdata - first two bytes
        are always the database name! (u16_t)

    x allocator umschreiben auf pointer
    x device entkoppeln von db

    x implement ham_env_create
        x create allocator
        x create device/file
        x store flags, parameter list

    x implement ham_env_close
        x make sure that all db's are closed

    x implement ham_env_open
        x store flags, parameter list
        x create allocator
        x open device/file

    x write a unittest for ham_env_create
    x write a unittest for ham_env_close
    x write a unittest for ham_env_open

    x implement ham_env_create_db(name, flags, param_list *)
        x move dbheader->_indexdata_offset to non-persistent db-storage!
        x valid flags: HAM_USE_BTREE, HAM_DISABLE_VAR_KEYLEN
        x must also use stored flags, parameter list from env
        x add database to env->list
        x must not create device, allocator
        x must create all other shared members if they are NULL
        x set dbheader->_max_db to DB_MAX_INDICES
        x set db->_indexdata_offset

    x db_set_keysize: must move to the backend
    x db_set_pers_flags: must move to the backend

    x implement ham_env_open_db(name, flags, param_list *)
        x valid flags: none???
        x make sure that the database was not yet opened
        x must also use stored flags, parameter list from env
        x must not create device, allocator
        x must create all other shared members if they are NULL
        x add database to env->list
        x set db->_indexdata_offset

    x unittests gehen nicht
    x acceptance-tests gehen nicht

    x modify ham_close - must free all ressources if it's the last
        database in the environment
        x remove database from env->list

    x beim ham_close müssen alle pages, die als owner die schliessende db
        haben, eine andere db als owner bekommen!

    x write a unittest (create several databases; close, reopen, close, etc)
        x also for in-memory-db!

    x modify all(!) public functions: prepare the shared members for 
        operations of THIS database:
        if (db_get_env(db)) {
          cache_set_db(cache, db);
          extkey_cache_set_db(extkey_cache, db);
          ...
        }

    x write unittests for the new functionalities
        x with extended keys (and reopen, unless in-memory)
        x with extended keys and erase/freelist (and reopen, unless in-memory)
        x with cursors (and reopen, unless in-memory)
        x with extended keys and erase/freelist and "random" create/close (and
            reopen, unless in-memory)
        x all of the above, with in-memory db






    o implement ham_env_rename_db
    o write unittests

    o implement ham_env_erase_db
        o move all pages (and blobs) to freelist
    o write unittests

    o endian-tests!

    o cleanups:
        o ham_env_create_ex accepts the keysize, but it's a "per database"
            parameter
        o ham_env_close sollte AUTOFLUSH können, sonst fehler wenn
            datenbanken noch offen sind
        o make sure that only valid flags in ham_env_open_db and
            ham_env_create_db are accepted!
        o ham_open kann laut doku DISABLE_VARLEN_KEYS - fehlt in 
            ham_env_open_db!
        o fix TODOs

    o write a new sample (structure with primary and secondary index)
    o update the tutorial

o completely automate the release-process for the tar-ball

o remove HAM_RELEASE (not needed, same as !HAM_DEBUG)
    o remove from sln files
    o remove from README.TXT

o release 0.4.4!

