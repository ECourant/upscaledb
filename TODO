
Legend:

o a pending  TODO item (normal priority)
. a pending  TODO item (low priority)
x a finished TODO item

-----------------------------------------------------------------------------

x release 0.4.7

x unittests: os.cpp:64 and os.cpp:80 try to open files which do not exist
        on win32; use other files instead

x some parts of the code would be nicer if we had ham_mem_calloc

x extkey_cache: merge extkey_cache_remove() and blob_free()

x are we using a good default page size? should we rather use 16kb??
    --> yes, 16kb are faster and files are smaller
    x change handling in hamsterdb.c
    x add unittests for different pagesizes
    x update CHANGELOG!

x unittest.vcproj: set working directory -> can't set it :-(

o c++-api
    x add static functions
    x add database functions
    x add cursor functions
    x add environments
    x add unittests (full coverage!)
    o convert sample db1.c and env2.c to c++
    o add documentation - how do we deal with documentation? refer to the
        C++ documentation, only document the differences! otherwise
        we go crazy...

o implement qemu images/machines for ARM, Sparc, PowerPC, PowerPC64 etc

o move unittest to C test framework, not cppunit?? bad for embedded
    platforms


o environments support a configurable number of databases

o prepare file format for filters

o add encryption filter

o add compression filter

o remove TODOs in the source

o do a complete source code review, or ask someone to do it;
    make sure that the test coverage is as high as possible


o tests are failing:
    --duplicate=1 --pagesize=65536
      x ../../testfiles/1/201.tst - freelist goes berzerk
      x ../../testfiles/1/202.tst - freelist goes berzerk
    --duplicate=1 --use-cursors=1
      o ../../testfiles/1/100.tst - status mismatch
      o ../../testfiles/1/202.tst - status mismatch
      o ../../testfiles/1/220.tst - status mismatch

o create a new repository for hamsterdb-alien for all dependencies 
    in source and precompiled (static/non-debug - cppunit and berkeleydb)
    x linux64-le
    x linux32-le
    x win32
    o cygwin32
    o win64
    o wince-x86
    o ppc32-be

o key_set_record does not always need to dirty the page (i.e. when
    appending duplicates) -> don't set page dirty in the caller

o cursor_overwrite/cursor_insert: 
    currently, the cursor_dupe_cache is deleted, but we don't have to
    also, in cursor_move there are some optimizations regarding the
    cache (search for TODO)

o modify acceptance test for --duplicate=1 (berkdb and hamster)
    o new acceptance tests with many, many duplicates
    o --duplicate-position="before"|"after"|"first"|"last"(default)
        o add to monster.sh
        o add to valgrind.sh

o do benchmarking with 1 mio inserts/reads

o be more careful when uncoupling cursors - especially when inserting 
    or deleting items, uncoupling is often not necessary
    o definitely no need to uncouple if overwriting or adding a duplicate
    o unittests: 
        o create cursor -> must be NIL
        o insert item   -> must be NIL
        o move cursor to item
        o insert item2 < item -> cursor is uncoupled
        o move cursor to item
        o insert duplicate of item -> cursor is still coupled
        o insert item2 > item -> cursor is still coupled

. some parts of the code would be nicer if we had ham_mem_realloc

. new option HAM_DISABLE_AUTO_REORG -> adds empty chunks to freelist, but
    never uses freelist for allocation

. new option HAM_DISABLE_FREELIST -> completely disables the freelist (needs
    cmd line reorg-tool!)

o c++ API
    o add documentation to webpage

o release 0.4.8 

. webpage
    o move to cakephp framework
    o frontpage: resize hamster picture; remove text -> more space below
        (for 3 colums: news, main features, articles/testimonials/link cloud)
