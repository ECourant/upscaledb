 
Legend:

o a pending  TODO item (normal priority)
. a pending  TODO item (low priority)
x a finished TODO item

-----------------------------------------------------------------------------

x make environment pointer obligatory - ham_create[_ex] and ham_open[_ex]
    create a private environment handle if it was not supplied
    x ham_create_ex now calls ham_env_create_ex
    x review, then continue with ham_open_ex
    x then continue with ham_env_open_db (needs code which i deleted :( )
    x move code from ham_create[_ex] into ham_env_create_db
    x move code from ham_open[_ex] into ham_env_open_db
    x don't forget to close/delete the handle!
    x valgrind shows memory leaks
    x txn: implies logfile - check if it's really created (and if the
        ENABLE_RECOVERY flag is set)!
    x clean up db.h/db.c and other code
    x ham_env_open: needs to store PRE_110-DAM in Databases! -> unittest
        (might already be there & work)
    x documentation: ham_env_open_db accepts DAM parameters (unittest!)

x merge env_is_active/db_is_active from Ger's latest sources
    x implement, fix unittests
    x needs unittest for structures (db/env)
    x needs unittests for each function that modifies the flag
    x needs documentation in header file (new error code!)

x bugreport from Austin:
    If I just use '--enable-debug', then my test passes but your suite fails 
    with:
    ----- error #1 in HamsterdbTest::nearFindTest
    hamsterdb.cpp:1013 assertion failed in expr HAM_NOT_INITIALIZED !=
    ham_calc_maxkeys_per_page(db, &keycount, MY_KEY_SIZE); actual values:
    '-7' == '-20'

o sort duplicate keys - Ger has patches
    o merge code
        x public interface: 
            x typedef for comparison function
            x API to set this comparison function
                x unittest
            x flag to enable duplicate sorting (HAM_SORT_DUPLICATES)
            x on create: allow HAM_SORT_DUPLICATES only in combination 
                with HAM_ENABLE_DUPLICATES!
                x unittest
            x unittest: flag is disallowed in Environment!
            x on open: allow HAM_SORT_DUPLICATES only in combination 
                with duplicates!
                x unittest
            x disallow HAM_DUPLICATE_INSERT_* if duplicate sorting is enabled
                x unittest
            x disallow cursor_overwrite if duplicate sorting is enabled
                x unittest
        x implement - can use a stripped-down version of Ger's code which
            just returns the position, and the continue as before
    o add unittests
    o add to monster test
    o add documentation (header file)
    o add documentation (tutorial)

o documentation right now includes internal APIs, too
    o move to separate target
    o public/default docs have only public documentation
    o change online documentation, too

o improve documentation/tutorial/faq about
    o approx. matching
    o hinting flags
    o DAMs

o need tool to upgrade databases from 1.0.x to 1.1.x!

o ham_get_parameter: could return VERSION of the database

o approx. matching: need a sample

o Ger: 
    o got rid of the cyclic dependencies
    o doxygen: look at tweak_html.bat 
    o backend separation was improved
    o check Changelog for more details

. env.h has some variables which are stored in the db header (i.e. 
    keysize, pagesize), but they are just in a non-persistent field
    also, they still show up in db.h as macros and fields of ham_db_t
    o merge db/env_get_pagesize with env_get_persistent_pagesize
    o merge db/env_set_pagesize with env_set_persistent_pagesize

    o db_get_freelist -> env_get_freelist_payload: returns payload!
    o db_get_freelist_cache -> env_get_freelist: returns object!
        -> do we need two things - payload and object??
    o db_is_dirty -> env_is_dirty
    o db_set_dirty -> env_set_dirty
    o db_set_allocator -> env_set_allocator
        o allocators are not stored - see log.cpp (replace allocator_free
            with ham_mem_free - crash!)

. ham_close/ham_env_close: can we move more stuff from ham_close
    to ham_env_close? 
    o clean up 'noenv' usage in ham_close

. who/what is the "owner" of a page?
    o hamsterdb: "transfer the ownership of the header page to this
        Database" (also in ham_close): why? can we clean this up? do we need
        an owner?
    o valgrind shows errors in EnvTest::eraseMultipleDatabases
    x add new test: EnvTest::eraseMultipleDatabases, but reopen the Env before
        erasing the Databases!

. which members of env/db can be overwritten by users and therefore have to
    be closed (or not) in ham_close/ham_env_close?
    o make a list
    o verify these with unittests
    o check Ger's latest sources

. re-enable HAM_DAM_FAST_INSERT
    o acceptance tests fail, i.e. ./test --keysize=680 --duplicate=1 
        -dam HAM_DAM_FAST_INSERT ../../testfiles/1/190.tst (and others)
    o re-enable tests in monster.sh

. Ger sent new statistics.c with minor fixes - it's on crupp.de:~
    o merge - but doesn't work yet! Wait for new fixes...
    x be careful - i think it's already merged... - no it isn't!
    o run monster.sh

. reorg. the HINT flags - they're now in hamsterdb_int.h and still used
    internally -> have them completely replaced by the DAM?
    are they needed? what are the performance advantages?

. approx. matching: need a sample

. HighLevelTxnTest::rollbackHugeBlobTest is inactive because huge blobs are
    directly written to disk instead of going through the cache -> in case of
    a txn_abort, these blobs are not reallocated

. win32: check Ger's solution - he can handle multiple msvc versions

----------

. enhance java/python/.NET for transactions and approx matching
    o update README file(s) with new address
    o python: we now have a ham_get_key_count() function and do not need the
        slow iteration code anymore

. enhance acceptance tests - will need new test scripts
    TXN_BEGIN 1  (1 is the txn id)
    TXN_ABORT 1
    TXN_INSERT 1 ...
    TXN_ERASE 1 ...
    TXN_COMMIT 1

. release-process: enhance automated tests of win32/win64 dll and lib

-----------------------------------------------------------------------------

. Perl wrapper

. PHP wrapper

-----------------------------------------------------------------------------

. tests are failing because of a berkeleydb bug:
    --duplicate=1 --use-cursors=1
      o ../../testfiles/1/100.tst - status mismatch
      o ../../testfiles/1/202.tst - status mismatch
      o ../../testfiles/1/220.tst - status mismatch

