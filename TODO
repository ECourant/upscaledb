
x release 0.4.6

x check ham_txn_abort in btree_cursor.c
    this call never appears in hamsterdb.c, but quite frequently in the
    cursor routines; is this a problem?
    x no, but enable ham_txn_abort in hamsterdb.c

x update tutorial
    x duplicate keys
    x add GPL3

x more ideas for unittests
    x unittests: insert NULL/TINY/SMALL as duplicates
    x unittests: insert NULL, then replace with TINY, then with SMALL, 
        then with big, then SMALL, TINY, NULL
    x insert some duplicates, then erase all but the last one; the last
        record must be TINY. is the duplicate table deleted? is the rid
        set to the TINY dupe? -> no, but it's ok for now

x ham_close with flag HAM_AUTO_CLEANUP
    x return DB_NOT_EMPTY if closing db but cursors still exist
        x add documentation in header file
        x unittest
    x close all cursors if HAM_AUTO_CLEANUP is specified
        x unittest
    x change the samples

x ham_env_close with flag HAM_AUTO_CLEANUP
    x return ENV_NOT_EMPTY if closing env but databases still exist
        x unittest
    x close all databases if HAM_AUTO_CLEANUP is specified
        x unittest
    x change the samples

x btree_insert:421 - why is the extkey deleted??

x protect users against uninitialized ham_key_t and ham_record_t structures
    x check if key->flags is 0 or USER_ALLOC
    x set key->_rid to 0
    x check if record->flags is 0 or USER_ALLOC
    x check all other private flags or set them to 0
    x modify the samples

x my_blob_is_small must be dependend of the page size!
    currently it's way too small if the pagesize is 64kb!!
    x test different sizes and pagesizes
    x rewrite as a macro

x move resizing of db_set_record_allocdata() to its own function
    x change the code
    x unittests?

x rewrite freelist
    x keep all freelist pages in a static lookup-table
    x resize table when necessary
    x make sure that unittests and acc.tests are running
    x for testing: ./test  --profile=1 ../../testfiles/1/180.tst --duplicate=1
        --verbose=1 takes 90 seconds (35 insert, 55 erase)
    x is the freelist loaded correctly after each reopen? -> rewrite unittests
    x check filesize after acceptance tests
    x fix memory leak in acceptance test

x key_set_record allocates a blob if record is {0, 0}!!

x improve performance of duplicate keys
    x get some numbers of 0.4.6
    x don't use blob_*-routines to manage the dupe_table
        instead, just modify the cached page and set the dirty-flag
        -> must make sure that the dupe_table doesn't span multiple pages
        -> can use this also for other blobs

x record numbers should not be reused
    currently, if the last record is deleted, and then the database is
    reopened, this record number is reused
    persistently cache the number of elements in the database - we need 
    this information anyway.
    x do NOT add a new function ham_get_count(), because this information
        is risky - if keys are inserted, but the application crashes, 
        the information is wrong
    x if the database is opened and the first recno item is appended AND
        the key already exists: re-read the largest key and set the counter
        again - No, not yet. just return ALREADY_EXISTS -> need reorg-tool
    x unittest

x overwrite inmemory-blob: do not re-allocate the memory if the memory sizes
    are the same

x ham_cursor_get_duplicate_count(ham_cursor_t *cursor,
        ham_size_t *count, int flags=0);
    x blob_duplicate_get_count(dupe_table_id);
    x implement public function
    x add header file documentation
    x unittests
    x add tutorial documentation

x new sample for duplicate keys
    modify sample env1, to create a 1:n relationship between orders
    and customers (or create a new sample)

x btree_node_search_by_key uses linear search, no binary search
    -> optimize this!!

x recno-unittest always overwrites the existing database; change the
    test so the original database is copied, and not modified
    x create os.hpp (same as in acceptance test)
        x static os::unlink()
        x static os::copy()
    x test ham_find
    x test ham_cursor_find
    x test ham_erase
    x test ham_cursor_erase
    x test ham_insert
    x test ham_cursor_insert

x win32: project for sample db5 is missing
    maybe restructure the solution file? one sln for win32, another for win64?
    i don't like it as it is right now
    x add missing samples env1.c, env2.c

x duplicate items on big endian
    x create unittest
    x check-in le-database (created by the new sample)
    x check-in be-database (created by the new sample)
    x enhance endian-create.sh and endian-check.sh
    x check acceptance tests!

x make sure that env2 works on Windows CE

o release 0.4.7

