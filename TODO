
Legend:

o a pending  TODO item (normal priority)
. a pending  TODO item (low priority)
x a finished TODO item

-----------------------------------------------------------------------------

x release 0.4.9

x increment libtool version to 1.0

x prepare licensing concept in serial.h (see roadmap for details)
    x implement ham_get_license function
        x also for C++ api
    x unittest
    x print license information in command line tools (help screen, version)

x need acceptance tests for 
    x duplicates-last = default
    x duplicates-first (not with fullcheck-backwards - bdb bug)
    x add to monster.sh and valgrind.sh

x unittest for invalid file headers ('H''A''M') -> HAM_INV_FILE_HEADER

x unittests for invalid database version (either major rev or minor rev
    != current) -> HAM_INV_FILE_VERSION

x review the header files

x get rid of ham_dump - no longer needed

x what happens with a page that is deleted (flag DELETE_PENDING), after 
    txn_commit or txn_abort were called?

x when do we use traces, when do we use normal output? should we add more
    traces, i.e. in case of invalid parameters?
    x both should ALWAYS compile
    x the error handler receives a "level"; the default handler prints 
        everything in DEBUG mode, and only the normal messages in release mode
        ham_trace: DEBUG level
        ham_log: normal warning level
        a custom handler could print anything whenever it wants to
    x review all logs/traces: unexpected errors -> traces; everything else: log
    x add a ham_trace call for each HAM_INV_PARAMETER error (and most other
        errors, if it makes sense for the caller)
    x release mode: print function name and error message; debug mode: print
        filename/lineno of hamsterdb source

x add something like "reading from stdin..." and a short explanation to all 
    samples which read from stdin; otherwise it's confusing for the user

x do a complete source code review
    (and while reviewing, make sure that all parts are covered by unittests)
    x mem.c
    x error.c
    x page.c
    x device.c
    x txn.c
    x keys.c
    x extkeys.c - yes, got performance improvements
    x os_posix.c
    x os_win32.c
    x blob.c
    x freelist.c
    x util.c
    x cache.c - yes, got performance improvements
    x db.c -- but leaves room for improvement
    x hamsterdb.c
    x btree.c
    x btree_enum.c
    x btree_find.c
    x btree_check.c
    x btree_insert.c
    x btree_cursor.c
    x btree_erase.c

x review the cache routines; when is the page-counter incremented or
    decremented, and how long does it usually take till a page is unloaded,
    because it's too old?
    do we need these counters? we can check the age of a page through
    the transaction id
    x need troubleshooting section which describes how to install a message
        handler

x enhance the tutorial
    doc rule: one sentence - no point; two sentences: make a point
    x Database
    x Environment
    x Cursor
    x In-Memory [Database/Environment]
    x Record Number Database

x re-check header files:
    x In-Memory [Database/Environment]
    x Record Number Database
    
x test extkeys without prefix compare function - is it faster? it should
    be the default!! But then it needs documentation in the tutorial
    -> no, it's slower; don't disable it by default

o send header files/tutorial to andrew/shira

o release 0.5.0 - this is 1.0rc1!!

. tests are failing because of a berkeleydb bug:
    --duplicate=1 --use-cursors=1
      o ../../testfiles/1/100.tst - status mismatch
      o ../../testfiles/1/202.tst - status mismatch
      o ../../testfiles/1/220.tst - status mismatch

