
x release 0.4.4!

x update samples and tutorial on hamsterdb.com

x add grammar fixes for the tutorial

x replace return code INVALID_INDEX with NOT_INITIALIZED

x replace return code ENV_FULL with a generic HAM_LIMITS_REACHED

x unittest: fill an environment, till it returns HAM_LIMITS_REACHED

x new unittest: ham_new, create, ham_close, open, ham_close, ham_delete
    x for db
    x for env
    x for db in env

x new unittest: insert extended keys with 0xffff byte size, search for it

x new unittest: create with READ_ONLY -> fail INVALID_PARAMETER

x new unittest: 
    x set compare function
    x unset compare function
    x set prefix-compare function
    x unset prefix-compare function

x db1.c: 
    x should reopen the database file (then we have a call to ham_open,
        which is otherwise not tested on CE)
    x crashes!!
    x then test on CE

x new unittest: open with READ_ONLY; all write-functions must fail

x new unittest: open env with READ_ONLY; all write-functions must fail, 
        and write-functions of opened databases must fail, too

x new unittest: create file with pagesize 64kb, then open it

x new unittest: create env with pagesize 64kb, then open it

x new unittest: select a pagesize/keysize so less than 4 keys fit on a 
    page -> INV_KEYSIZE

x new unittest: create an environment, don't insert a database; close
    then open the environment as a database file (ham_open)

x new unittest: create an environment, insert a database; close
    then open the environment as a database file (ham_open)
        - should load the first available database

x new unittest: create an environment, insert two databases, delete the first
    then open the environment as a database file (ham_open)
        - should load the first available database

x new unittests for exclusive file locking
    x check on linux
    x check on windows
    x check on cygwin -- fails!

x should backends have a version information? otherwise, the 32byte might be
    full, and we don't have room for an overflow area...
    -> not yet, still enough room

x more tests and performance checks with very large files - around 256 MB
    x write perl-script to generate the tests - w/o extended keys, big blobs
    x write perl-script to generate the tests - w/  extended keys, big blobs
    -> findings: ham_insert is a bit slower, but cursors (and erase and find)
        are way faster





o add support for logical record numbers
    x new (persistent) flag HAM_RECORD_NUMBER
    x needs new compare function for this database (same as in acceptance test)
    x on first request, get a cursor to the last element and fetch the
        previous recno
    x make sure that keysize is >= 8 (set a good default keysize - needs
        benchmarks!)
    x ham_insert: key must be NULL, (0/NULL) or (sizeof(u64_t)/!NULL)
        - in the last case, the key is filled (host-endian)
    x stored in db-endian, returned in host-endian
    x also modify ham_cursor_insert

    o btree insert: add optimization for "late splits" (don't split at 
        50% but select better pivot element - 95% or so)

    o new unittests
        x create, insert, close; reopen, insert, close -> must 
            continue the sequence
        x insert other keys -> not allowed
        o repeat all unit-tests with cursors
        o test recno in an environment (with other databases, and
            non-recno databases)

    o new acceptance tests!
    o cross-platform-tests!
    o benchmark for best keysize

    o new sample db4 - same as db3.c, but with recno
    o documentation
    o tutorial

o unittest for cursors: ham_insert(x), ham_insert(x+1) 
    cursor_find(x); cursor!=NULL; ham_erase(x); 
    cursor_move(key, rec, NEXT); -> KEY_NOT_FOUND

o bei ham_flush wird auch die db-header-page geflusht. wird sie zuvor auch
    vom btree geupdated? das passiert nämlich nur in btree_close
    o neue funktion btree_flush
    o wird auch von btree_close aufgerufen
    o wird im ham_flush aufgerufen

o unittest for ham_flush
    o create a new environment, insert a few items, erase them (for the 
        freelist); then flush; don't close the database; open the 
        file with a second handle, and check if everything is available

o release 0.4.5

o environment should support a configurable number of databases

