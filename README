
hamsterdb 0.4.2                                Tue Mar 27 19:08:01 UTC 2007
(C) Christoph Rupp, chris@crupp.de; http://www.hamsterdb.com

This is the README file of hamsterdb. 

Contents:

1. About

hamsterdb is a database engine written in ANSI C. It supports a B+Tree index
structure, uses memory mapped I/O (if available), supports cursors, and can
create in-memory databases.

2. Changes

hamsterdb is now endian agnostic. Database files created on little-endian
architectures will also work on big-endian systems, and vice versa. 

The documentation was completely rewritten and a webpage was created 
(http://www.hamsterdb.com).

Some minor bugs were fixed as well. To see a list of all changes, look 
in the file CHANGELOG.

3. Roadmap

The next releases will offer the following new features:
- command line tools for recovery, dump and statistics
- duplicate items
- multiple databases in one file

4. Features

- Very fast sorted B+Tree with variable length keys
- Can run as an in-memory-database
- Fast Database cursors 
- Configurable page size, cache size and index key size
- Portable ANSI-C implementation
- Runs on Linux, Unices, Microsoft Windows
- Database files are endian-agnostic
- Uses memory mapped I/O for fast disk access (but falls back to read/write if
  mmap is not available)
- Uses 64bit file pointers and supports huge files (>2 GB)
- Easy to use and well-documented
- Supports rudimentary live-reorganization by merging freelist entries
- Open source and released under the GPL 2.0

5. Known Issues/Bugs

none so far

6. Compiling 

6.1 Linux and Cygwin/Win32

To compile hamsterdb, run ./configure, make, make install.

Run `./configure --help' for more options (i.e. static/dynamic library, 
build with debugging symbols etc).

6.2 Microsoft Visual Studio 8

A Solution file is provided for Microsoft Visual C++ 2005:
win32/hamsterdb/hamsterdb.sln. It compiles a static and a dynamic library. 
The static library is built in '/win32/hamsterdb/lib/Release/hamsterdb.lib', 
the dynamic library is in '/win32/hamsterdb/lib/Debug/hamsterdb.dll'. An import
library is also provided. All libraries can be downloaded separately from 
the hamsterdb webpage.

To download Microsoft Visual C++ 2005 Express Edition for free, go to
http://msdn.microsoft.com/vstudio/express/visualc/default.aspx.

7. Testing and Example Code

Make automatically compiles a simple example program in the directory
'/samples'. To see hamsterdb in action, just run '/samples/db1' (or 
'/win32/hamsterdb/db1/Release/db1.exe' on Win32 platforms).

8. API Documentation

API documentation is not yet available. The header files in '/include/ham' are 
commented, though. The next release will provide a doxygen script to 
generate the documentation from the header files.  

9. Other Ways to Compile hamsterdb

If you want to compile hamsterdb without using the provided ./configure
environment, you have to set some preprocessor macros:

WIN32                   Build for Win32 platform
DEBUG                   enable debugging output and diagnostic checks (slow!)
HAM_LITTLE_ENDIAN       compile for little endian machines (i.e. x86)
HAM_BIG_ENDIAN          compile for big endian machines (most other
                            architectures)
HAM_32BIT               compile for 32bit
HAM_64BIT               compile for 64bit
HAM_ENABLE_INTERNAL     enable internal functions (declared in
                            include/ham/hamsterdb_int.h)

Also, if you compile for windows, you have to compile the file src/os_win32.c,
and ignore the file src/os_posix.c. Vice versa on non-Windows platforms.

10. Porting hamsterdb

Porting hamsterdb shouldn't be too difficult. All operating system dependend
functions are declared in 'src/os.h' and defined in 'src/os_win32.c' or 
'src/os_posix.c'. 
Other compiler- and OS-specific macros are in 'include/ham/types.h'. 
Most likely, these are the only files which have to be touched. Also see item 
9) for important macros. 

