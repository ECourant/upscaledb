
hamsterdb 0.4                                  Sun Feb  4 12:57:53 UTC 2007
(C) Christoph Rupp, chris@crupp.de; www.crupp.de

This is the README file of hamsterdb. 

Contents:

1. About

hamsterdb is a fast and small database engine. You can insert, delete or look
up key/data pairs. It supports a B+Tree index structure with variable length 
keys and variable length data records. 

2. Changes

This release features the implementation of database cursors. You can 
use cursors to traverse all records from front to end or end to front. You
can also use cursors to insert, erase or replace records.

Some minor bugs were fixed as well. To see a list of all changes, look 
in the file CHANGELOG.

3. Roadmap

The next releases will finally port hamsterdb to Win32 platforms and to 
linux on PowerPC. Also, the endian-independence will be tested.
The documentation will be overhauled, and hamsterdb will get its own webpage.

4. Features

- B+Tree with variable length keys
- Configurable page size and cache size
- ANSI-C implementation, should be portable on all platforms, also embedded
- Uses memory mapped I/O for fast disk access (but falls back to read/write if
  mmap is not available)
- Uses 64bit file pointers for large databases
- Endian-independent (not tested, though)
- Support for in-memory-databases
- Database cursors

5. Known Issues/Bugs

- Endian-independence was not (yet) tested

6. Compiling

To compile hamsterdb, run ./configure, make, make install.

Run `./configure --help' for more options (i.e. static/dynamic library, 
build with debugging symbols etc).

7. Testing and Example Code

Make automatically compiles a simple example program in the directory
'/samples'. To see hamsterdb in action, just run '/samples/db1'.

8. API Documentation

API documentation is not yet available. The header files in '/include/ham' are 
commented, though. The next release will provide a doxygen script to 
generate the documentation from the header files.  

9. Compiling for Microsoft Windows

See the subdirectory ./win32 for batch-files which use the Microsoft compiler 
(cl). Before you start those files, you have to execute the setenv.bat file 
which is in the Visual Studio directory.

10. Other Ways to Compile hamsterdb

If you want to compile hamsterdb without using the provided ./configure
environment, you have to set some preprocessor macros:

WIN32                   Win32 platform
DEBUG                   enable debugging output and checks (slow!)
HAM_LITTLE_ENDIAN       compile for little endian machines (i.e. x86)
HAM_BIG_ENDIAN          compile for big endian machines (most other
                            architectures)
HAM_32BIT               compile for 32bit
HAM_64BIT               compile for 64bit

Also, if you compile for windows, you have to compile the file src/os_win32.c,
and ignore the file src/os_posix.c. Vice versa on non-Windows platforms.

11. Porting hamsterdb

Porting hamsterdb shouldn't be too difficult. All operating system dependend
functions are declared in os.h and defined in os_win32.c or os_posix.c. Most 
likely, these are the only files which have to be touched. Also see item 8)
for compiler instructions.

