
o first step:
    x need configure switch to disable the server
    o need 3rdparty stuff
        x add json to 3rdparty
        x add mongoose to 3rdparty
        o add APR to 3rdparty (or use libcurl?)
    x define/implement public API
        x implemented
        x need mutex/critsec to protect use of environment!
    x open environments/databases are used through url /envname/ (/dbname/)
    o unix daemon (also running in foreground)
    o implement with google protocol buffers
    . windows service: command line switches -install, -start, 
        -stop, -uninstall!
    . configuration file: no default path; is set by command line parameter
        o use to specify the port
        o use to specify available databases/Environments and their url
        o every! configuration option can be used programmatically!
        o default is read from built-in json string
            o all other sources are "merged" and ONLY overwrite, but do NOT
                add new strings!
            o unknown strings are ignored (print warning!)
    . install a callback for authentication (and offer a predefined
        callback for SSL?)

o client
    o need configure switch to disable the remote client
        o add test to release.sh
    o need configure switch to disable the local client
        o add test to release.sh
    o abstract env functions into "class" (like backend)
    o separate local code into local_env.c
    o separate remote code into remote_env.c
    o if file starts with "http://" or "shttp://" then switch to remote client

o need win32 project for the server
. also allow json for the protocol
