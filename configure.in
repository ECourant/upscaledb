dnl
dnl   configuration script for hamsterdb
dnl
dnl   (C) 2006, Christoph Rupp, chris@crupp.de
dnl
dnl   TODO see license for licenses
dnl

AC_PREREQ(2.59)

dnl Get the version number of hamsterdb
define([ham_version], [esyscmd(build/scripts/get-version.sh src/version.h)])
AC_INIT([hamsterdb], ham_version, [chris@crupp.de])

AC_CONFIG_AUX_DIR(build/scripts)
AM_INIT_AUTOMAKE([1.9 foreign])
AC_CONFIG_HEADER(config.h)

AC_LIBTOOL_WIN32_DLL
AC_PROG_LIBTOOL
AC_PROG_RANLIB
AC_PROG_CC
AC_PROG_INSTALL
AC_HEADER_STDC
AC_C_BIGENDIAN
AC_C_CONST
AC_TYPE_SIZE_T
AC_CHECK_FUNCS(pread pwrite mmap munmap)
AC_CHECK_HEADERS(fcntl.h unistd.h)
AC_TYPE_OFF_T
AC_FUNC_MMAP

dnl
dnl big endian or little endian?
dnl 
AC_C_BIGENDIAN(
        big_endian=yes,
        big_endian=no,
        AC_MSG_ERROR(Don't know if this platform is bigendian or little
                     endian))
AM_CONDITIONAL(BIG_ENDIAN, test x$big_endian = xyes)

dnl
dnl support debugging
dnl 
AC_ARG_ENABLE(debug,
     [  --enable-debug          Turn on debugging],
     [case "${enableval}" in
       yes) debug=true ;;
       no)  debug=false ;;
       *) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;
     esac],[debug=false])
AM_CONDITIONAL(DEBUG, test x$debug = xtrue)

dnl
dnl support profiling
dnl 
AC_ARG_ENABLE(profile,
     [  --enable-profile        Turn on profiling],
     [case "${enableval}" in
       yes) profile=true ;;
       no)  profile=false ;;
       *) AC_MSG_ERROR(bad value ${enableval} for --enable-profile) ;;
     esac],[profile=false])
AM_CONDITIONAL(PROFILE, test x$profile = xtrue)

dnl
dnl don't use optimization if gcc version is < 4.1.1 
dnl
AM_CONDITIONAL(USING_GCC, test x$GCC = xyes)
if test "$GCC" = yes ; then
    AC_MSG_CHECKING(whether gcc version is older than 4.1.1)
    AC_TRY_COMPILE(,
        [#define GCC_VERSION (__GNUC__ * 10000 \
                            + __GNUC_MINOR__ * 100 \
                            + __GNUC_PATCHLEVEL__)
        #if GCC_VERSION<40101
        #   error "gcc too old, disabling optimizations"
        #endif
        int main(void) { return 0; }],
                   gcc_version_ok=yes, 
                   gcc_version_ok=no)
    if test $gcc_version_ok != yes; then
        AC_MSG_RESULT(Yes, disabling optimizations)
    else
        AC_MSG_RESULT(No, enabling optimizations)
    fi
fi
AM_CONDITIONAL(ENABLE_GCC_OPTIMIZATION, test x$gcc_version_ok = xyes)

dnl
dnl are we using gcc? we need this to disable optimization for debug builds
dnl
AM_CONDITIONAL(USGIN_GCC, test x$GCC = xyes)

AC_CONFIG_FILES(Makefile src/Makefile samples/Makefile tests/Makefile)
AC_OUTPUT

